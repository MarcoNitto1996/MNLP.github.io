{"ast":null,"code":"var _jsxFileName = \"/Users/francescociano/Desktop/Coding/Burotha/Projects/LandingPage/lending_page_marco_nitto/landing-page-mn/src/blocks/TextAnimations/SplitText/SplitText.tsx\",\n  _s = $RefreshSig$();\n/*\n\tjsrepo 1.29.1\n\tInstalled from https://reactbits.dev/ts/default/\n\t2-2-2025\n*/\n\nimport { useSprings, animated } from \"@react-spring/web\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SplitText = ({\n  text = \"\",\n  className = \"\",\n  delay = 100,\n  animationFrom = {\n    opacity: 0,\n    transform: \"translate3d(0,40px,0)\"\n  },\n  animationTo = {\n    opacity: 1,\n    transform: \"translate3d(0,0,0)\"\n  },\n  easing = t => t,\n  threshold = 0.1,\n  rootMargin = \"-100px\",\n  textAlign = \"center\",\n  onLetterAnimationComplete\n}) => {\n  _s();\n  const words = text.split(\" \").map(word => word.split(\"\"));\n  const letters = words.flat();\n  const [inView, setInView] = useState(false);\n  const ref = useRef(null);\n  const animatedCount = useRef(0);\n  useEffect(() => {\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting) {\n        setInView(true);\n        if (ref.current) {\n          observer.unobserve(ref.current);\n        }\n      }\n    }, {\n      threshold,\n      rootMargin\n    });\n    if (ref.current) {\n      observer.observe(ref.current);\n    }\n    return () => observer.disconnect();\n  }, [threshold, rootMargin]);\n  const springs = useSprings(letters.length, letters.map((_, i) => ({\n    from: animationFrom,\n    to: inView ? async next => {\n      await next(animationTo);\n      animatedCount.current += 1;\n      if (animatedCount.current === letters.length && onLetterAnimationComplete) {\n        onLetterAnimationComplete();\n      }\n    } : animationFrom,\n    delay: i * delay,\n    config: {\n      easing\n    }\n  })));\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    ref: ref,\n    className: `split-parent ${className}`,\n    style: {\n      textAlign,\n      overflow: \"hidden\",\n      display: \"inline\",\n      whiteSpace: \"normal\",\n      wordWrap: \"break-word\"\n    },\n    children: words.map((word, wordIndex) => /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        display: \"inline-block\",\n        whiteSpace: \"nowrap\"\n      },\n      children: [word.map((letter, letterIndex) => {\n        const index = words.slice(0, wordIndex).reduce((acc, w) => acc + w.length, 0) + letterIndex;\n        return /*#__PURE__*/_jsxDEV(animated.span, {\n          style: {\n            ...springs[index],\n            display: \"inline-block\",\n            willChange: \"transform, opacity\"\n          },\n          children: letter\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          display: \"inline-block\",\n          width: \"0.3em\"\n        },\n        children: \"\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, wordIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(SplitText, \"aihlks1QOUvV51sB8x8RcPuoMgs=\", false, function () {\n  return [useSprings];\n});\n_c = SplitText;\nexport default SplitText;\nvar _c;\n$RefreshReg$(_c, \"SplitText\");","map":{"version":3,"names":["useSprings","animated","useEffect","useRef","useState","jsxDEV","_jsxDEV","SplitText","text","className","delay","animationFrom","opacity","transform","animationTo","easing","t","threshold","rootMargin","textAlign","onLetterAnimationComplete","_s","words","split","map","word","letters","flat","inView","setInView","ref","animatedCount","observer","IntersectionObserver","entry","isIntersecting","current","unobserve","observe","disconnect","springs","length","_","i","from","to","next","config","style","overflow","display","whiteSpace","wordWrap","children","wordIndex","letter","letterIndex","index","slice","reduce","acc","w","span","willChange","fileName","_jsxFileName","lineNumber","columnNumber","width","_c","$RefreshReg$"],"sources":["/Users/francescociano/Desktop/Coding/Burotha/Projects/LandingPage/lending_page_marco_nitto/landing-page-mn/src/blocks/TextAnimations/SplitText/SplitText.tsx"],"sourcesContent":["/*\n\tjsrepo 1.29.1\n\tInstalled from https://reactbits.dev/ts/default/\n\t2-2-2025\n*/\n\nimport { useSprings, animated, SpringValue } from \"@react-spring/web\";\nimport { useEffect, useRef, useState, MutableRefObject } from \"react\";\n\ninterface SplitTextProps {\n  text?: string;\n  className?: string;\n  delay?: number;\n  animationFrom?: { opacity: number; transform: string };\n  animationTo?: { opacity: number; transform: string };\n  easing?: (t: number) => number;\n  threshold?: number;\n  rootMargin?: string;\n  textAlign?: \"left\" | \"right\" | \"center\" | \"justify\" | \"initial\" | \"inherit\";\n  onLetterAnimationComplete?: () => void;\n}\n\nconst SplitText: React.FC<SplitTextProps> = ({\n  text = \"\",\n  className = \"\",\n  delay = 100,\n  animationFrom = { opacity: 0, transform: \"translate3d(0,40px,0)\" },\n  animationTo = { opacity: 1, transform: \"translate3d(0,0,0)\" },\n  easing = (t: number) => t,\n  threshold = 0.1,\n  rootMargin = \"-100px\",\n  textAlign = \"center\",\n  onLetterAnimationComplete,\n}) => {\n  const words = text.split(\" \").map((word) => word.split(\"\"));\n  const letters = words.flat();\n  const [inView, setInView] = useState(false);\n  const ref = useRef<HTMLParagraphElement>(null);\n  const animatedCount = useRef(0);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          setInView(true);\n          if (ref.current) {\n            observer.unobserve(ref.current);\n          }\n        }\n      },\n      { threshold, rootMargin },\n    );\n\n    if (ref.current) {\n      observer.observe(ref.current);\n    }\n\n    return () => observer.disconnect();\n  }, [threshold, rootMargin]);\n\n  const springs = useSprings(\n    letters.length,\n    letters.map((_, i) => ({\n      from: animationFrom,\n      to: inView\n        ? async (next: (props: any) => Promise<void>) => {\n            await next(animationTo);\n            animatedCount.current += 1;\n            if (\n              animatedCount.current === letters.length &&\n              onLetterAnimationComplete\n            ) {\n              onLetterAnimationComplete();\n            }\n          }\n        : animationFrom,\n      delay: i * delay,\n      config: { easing },\n    })),\n  );\n\n  return (\n    <p\n      ref={ref}\n      className={`split-parent ${className}`}\n      style={{\n        textAlign,\n        overflow: \"hidden\",\n        display: \"inline\",\n        whiteSpace: \"normal\",\n        wordWrap: \"break-word\",\n      }}\n    >\n      {words.map((word, wordIndex) => (\n        <span\n          key={wordIndex}\n          style={{ display: \"inline-block\", whiteSpace: \"nowrap\" }}\n        >\n          {word.map((letter, letterIndex) => {\n            const index =\n              words.slice(0, wordIndex).reduce((acc, w) => acc + w.length, 0) +\n              letterIndex;\n\n            return (\n              <animated.span\n                key={index}\n                style={{\n                  ...springs[index],\n                  display: \"inline-block\",\n                  willChange: \"transform, opacity\",\n                }}\n              >\n                {letter}\n              </animated.span>\n            );\n          })}\n          <span style={{ display: \"inline-block\", width: \"0.3em\" }}>\n            &nbsp;\n          </span>\n        </span>\n      ))}\n    </p>\n  );\n};\n\nexport default SplitText;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}