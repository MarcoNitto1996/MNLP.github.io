{"ast":null,"code":"var _jsxFileName = \"/Users/francescociano/Desktop/Coding/Burotha/Projects/LandingPage/lending_page_marco_nitto/landing-page-mn/src/components/BlurText/BlurText.tsx\",\n  _s = $RefreshSig$();\nimport { useSprings, animated } from '@react-spring/web';\nimport { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlurText = ({\n  text = '',\n  delay = 200,\n  className = '',\n  animateBy = 'words',\n  direction = 'top',\n  threshold = 0.1,\n  rootMargin = '0px',\n  animationFrom,\n  animationTo,\n  easing = t => t,\n  // Default to linear easing\n  onAnimationComplete\n}) => {\n  _s();\n  const elements = animateBy === 'words' ? text.split(' ') : text.split('');\n  const [inView, setInView] = useState(false);\n  const ref = useRef(null);\n  const animatedCount = useRef(0);\n\n  // Default animations based on direction\n  const defaultFrom = direction === 'top' ? {\n    filter: 'blur(10px)',\n    opacity: 0,\n    transform: 'translate3d(0,-50px,0)'\n  } : {\n    filter: 'blur(10px)',\n    opacity: 0,\n    transform: 'translate3d(0,50px,0)'\n  };\n  const defaultTo = [{\n    filter: 'blur(5px)',\n    opacity: 0.5,\n    transform: direction === 'top' ? 'translate3d(0,5px,0)' : 'translate3d(0,-5px,0)'\n  }, {\n    filter: 'blur(0px)',\n    opacity: 1,\n    transform: 'translate3d(0,0,0)'\n  }];\n  useEffect(() => {\n    if (!ref.current) return;\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting) {\n        setInView(true);\n        observer.unobserve(ref.current);\n      }\n    }, {\n      threshold,\n      rootMargin\n    });\n    observer.observe(ref.current);\n    return () => observer.disconnect();\n  }, [threshold, rootMargin]);\n  const springs = useSprings(elements.length, i => ({\n    from: animationFrom || defaultFrom,\n    to: inView ? async next => {\n      for (const step of animationTo || defaultTo) {\n        await next(step);\n      }\n      animatedCount.current += 1;\n      if (animatedCount.current === elements.length && onAnimationComplete) {\n        onAnimationComplete();\n      }\n    } : animationFrom || defaultFrom,\n    delay: i * delay,\n    config: {\n      easing\n    }\n  }));\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    ref: ref,\n    className: className,\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    children: springs.map((props, index) => /*#__PURE__*/_jsxDEV(animated.span, {\n      style: {\n        ...(props || {}),\n        display: 'inline-block',\n        willChange: 'transform, filter, opacity'\n      },\n      children: [elements[index] === ' ' ? '\\u00A0' : elements[index], animateBy === 'words' && index < elements.length - 1 && '\\u00A0']\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(BlurText, \"aihlks1QOUvV51sB8x8RcPuoMgs=\", false, function () {\n  return [useSprings];\n});\n_c = BlurText;\nexport default BlurText;\nvar _c;\n$RefreshReg$(_c, \"BlurText\");","map":{"version":3,"names":["useSprings","animated","useRef","useEffect","useState","jsxDEV","_jsxDEV","BlurText","text","delay","className","animateBy","direction","threshold","rootMargin","animationFrom","animationTo","easing","t","onAnimationComplete","_s","elements","split","inView","setInView","ref","animatedCount","defaultFrom","filter","opacity","transform","defaultTo","current","observer","IntersectionObserver","entry","isIntersecting","unobserve","observe","disconnect","springs","length","i","from","to","next","step","config","style","display","flexWrap","children","map","props","index","span","willChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/francescociano/Desktop/Coding/Burotha/Projects/LandingPage/lending_page_marco_nitto/landing-page-mn/src/components/BlurText/BlurText.tsx"],"sourcesContent":["import { useSprings, animated, SpringValue } from '@react-spring/web';\nimport { useRef, useEffect, useState } from 'react';\n\ntype BlurTextProps = {\n  text?: string;\n  delay?: number;\n  className?: string;\n  animateBy?: 'words' | 'letters';\n  direction?: 'top' | 'bottom';\n  threshold?: number;\n  rootMargin?: string;\n  animationFrom?: Record<string, string | number>;\n  animationTo?: Array<Record<string, string | number>>;\n  easing?: (t: number) => number;\n  onAnimationComplete?: () => void;\n};\n\nconst BlurText: React.FC<BlurTextProps> = ({\n  text = '',\n  delay = 200,\n  className = '',\n  animateBy = 'words',\n  direction = 'top',\n  threshold = 0.1,\n  rootMargin = '0px',\n  animationFrom,\n  animationTo,\n  easing = (t) => t, // Default to linear easing\n  onAnimationComplete,\n}) => {\n  const elements = animateBy === 'words' ? text.split(' ') : text.split('');\n  const [inView, setInView] = useState(false);\n  const ref = useRef<HTMLParagraphElement>(null);\n  const animatedCount = useRef(0);\n\n  // Default animations based on direction\n  const defaultFrom =\n    direction === 'top'\n      ? { filter: 'blur(10px)', opacity: 0, transform: 'translate3d(0,-50px,0)' }\n      : { filter: 'blur(10px)', opacity: 0, transform: 'translate3d(0,50px,0)' };\n\n  const defaultTo = [\n    {\n      filter: 'blur(5px)',\n      opacity: 0.5,\n      transform: direction === 'top' ? 'translate3d(0,5px,0)' : 'translate3d(0,-5px,0)',\n    },\n    { filter: 'blur(0px)', opacity: 1, transform: 'translate3d(0,0,0)' },\n  ];\n\n  useEffect(() => {\n    if (!ref.current) return;\n\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          setInView(true);\n          observer.unobserve(ref.current!);\n        }\n      },\n      { threshold, rootMargin }\n    );\n\n    observer.observe(ref.current);\n\n    return () => observer.disconnect();\n  }, [threshold, rootMargin]);\n\n  const springs = useSprings(elements.length, (i) => ({\n    from: animationFrom || defaultFrom,\n    to: inView\n      ? async (next: (step: Record<string, string | number>) => Promise<void>) => {\n          for (const step of animationTo || defaultTo) {\n            await next(step);\n          }\n          animatedCount.current += 1;\n          if (animatedCount.current === elements.length && onAnimationComplete) {\n            onAnimationComplete();\n          }\n        }\n      : animationFrom || defaultFrom,\n    delay: i * delay,\n    config: { easing },\n  }));\n\n  return (\n    <p\n      ref={ref}\n      className={className}\n      style={{ display: 'flex', flexWrap: 'wrap' }}\n    >\n      {springs.map((props, index) => (\n        <animated.span\n          key={index}\n          style={{\n            ...(props || {}),\n            display: 'inline-block',\n            willChange: 'transform, filter, opacity',\n          } as unknown as { [key: string]: SpringValue<string | number> }}\n        >\n          {elements[index] === ' ' ? '\\u00A0' : elements[index]}\n          {animateBy === 'words' && index < elements.length - 1 && '\\u00A0'}\n        </animated.span>\n      ))}\n    </p>\n  );\n};\n\nexport default BlurText;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}