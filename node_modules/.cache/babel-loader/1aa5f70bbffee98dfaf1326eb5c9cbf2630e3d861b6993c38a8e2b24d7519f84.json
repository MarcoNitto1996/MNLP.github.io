{"ast":null,"code":"var _jsxFileName = \"/Users/francescociano/Desktop/Coding/Burotha/Projects/LandingPage/lending_page_marco_nitto/landing-page-mn/src/components/Bits/FuzzyText/FuzzyText.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FuzzyText = ({\n  children,\n  fontSize = \"clamp(2rem, 8vw, 8rem)\",\n  fontWeight = 900,\n  fontFamily = \"inherit\",\n  color = \"#fff\",\n  enableHover = true,\n  baseIntensity = 0.18,\n  hoverIntensity = 0.5\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    let animationFrameId;\n    let isCancelled = false;\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const init = async () => {\n      var _document$fonts, _metrics$actualBoundi, _metrics$actualBoundi2, _metrics$actualBoundi3, _metrics$actualBoundi4;\n      if ((_document$fonts = document.fonts) !== null && _document$fonts !== void 0 && _document$fonts.ready) {\n        await document.fonts.ready;\n      }\n      if (isCancelled) return;\n      const ctx = canvas.getContext(\"2d\");\n      if (!ctx) return;\n      const computedFontFamily = fontFamily === \"inherit\" ? window.getComputedStyle(canvas).fontFamily || \"sans-serif\" : fontFamily;\n      const fontSizeStr = typeof fontSize === \"number\" ? `${fontSize}px` : fontSize;\n      let numericFontSize;\n      if (typeof fontSize === \"number\") {\n        numericFontSize = fontSize;\n      } else {\n        const temp = document.createElement(\"span\");\n        temp.style.fontSize = fontSize;\n        document.body.appendChild(temp);\n        const computedSize = window.getComputedStyle(temp).fontSize;\n        numericFontSize = parseFloat(computedSize);\n        document.body.removeChild(temp);\n      }\n      const text = React.Children.toArray(children).join(\"\");\n      const offscreen = document.createElement(\"canvas\");\n      const offCtx = offscreen.getContext(\"2d\");\n      if (!offCtx) return;\n      offCtx.font = `${fontWeight} ${fontSizeStr} ${computedFontFamily}`;\n      offCtx.textBaseline = \"alphabetic\";\n      const metrics = offCtx.measureText(text);\n      const actualLeft = (_metrics$actualBoundi = metrics.actualBoundingBoxLeft) !== null && _metrics$actualBoundi !== void 0 ? _metrics$actualBoundi : 0;\n      const actualRight = (_metrics$actualBoundi2 = metrics.actualBoundingBoxRight) !== null && _metrics$actualBoundi2 !== void 0 ? _metrics$actualBoundi2 : metrics.width;\n      const actualAscent = (_metrics$actualBoundi3 = metrics.actualBoundingBoxAscent) !== null && _metrics$actualBoundi3 !== void 0 ? _metrics$actualBoundi3 : numericFontSize;\n      const actualDescent = (_metrics$actualBoundi4 = metrics.actualBoundingBoxDescent) !== null && _metrics$actualBoundi4 !== void 0 ? _metrics$actualBoundi4 : numericFontSize * 0.2;\n      const textBoundingWidth = Math.ceil(actualLeft + actualRight);\n      const tightHeight = Math.ceil(actualAscent + actualDescent);\n      const extraWidthBuffer = 10;\n      const offscreenWidth = textBoundingWidth + extraWidthBuffer;\n      offscreen.width = offscreenWidth;\n      offscreen.height = tightHeight;\n      const xOffset = extraWidthBuffer / 2;\n      offCtx.font = `${fontWeight} ${fontSizeStr} ${computedFontFamily}`;\n      offCtx.textBaseline = \"alphabetic\";\n      offCtx.fillStyle = color;\n      offCtx.fillText(text, xOffset - actualLeft, actualAscent);\n      const horizontalMargin = 50;\n      const verticalMargin = 0;\n      canvas.width = offscreenWidth + horizontalMargin * 2;\n      canvas.height = tightHeight + verticalMargin * 2;\n      ctx.translate(horizontalMargin, verticalMargin);\n      const interactiveLeft = horizontalMargin + xOffset;\n      const interactiveTop = verticalMargin;\n      const interactiveRight = interactiveLeft + textBoundingWidth;\n      const interactiveBottom = interactiveTop + tightHeight;\n      let isHovering = false;\n      const fuzzRange = 30;\n      const run = () => {\n        if (isCancelled) return;\n        ctx.clearRect(-fuzzRange, -fuzzRange, offscreenWidth + 2 * fuzzRange, tightHeight + 2 * fuzzRange);\n        const intensity = isHovering ? hoverIntensity : baseIntensity;\n        for (let j = 0; j < tightHeight; j++) {\n          const dx = Math.floor(intensity * (Math.random() - 0.5) * fuzzRange);\n          ctx.drawImage(offscreen, 0, j, offscreenWidth, 1, dx, j, offscreenWidth, 1);\n        }\n        animationFrameId = window.requestAnimationFrame(run);\n      };\n      run();\n      const isInsideTextArea = (x, y) => x >= interactiveLeft && x <= interactiveRight && y >= interactiveTop && y <= interactiveBottom;\n      const handleMouseMove = e => {\n        if (!enableHover) return;\n        const rect = canvas.getBoundingClientRect();\n        const x = e.clientX - rect.left;\n        const y = e.clientY - rect.top;\n        isHovering = isInsideTextArea(x, y);\n      };\n      const handleMouseLeave = () => {\n        isHovering = false;\n      };\n      const handleTouchMove = e => {\n        if (!enableHover) return;\n        e.preventDefault();\n        const rect = canvas.getBoundingClientRect();\n        const touch = e.touches[0];\n        const x = touch.clientX - rect.left;\n        const y = touch.clientY - rect.top;\n        isHovering = isInsideTextArea(x, y);\n      };\n      const handleTouchEnd = () => {\n        isHovering = false;\n      };\n      if (enableHover) {\n        canvas.addEventListener(\"mousemove\", handleMouseMove);\n        canvas.addEventListener(\"mouseleave\", handleMouseLeave);\n        canvas.addEventListener(\"touchmove\", handleTouchMove, {\n          passive: false\n        });\n        canvas.addEventListener(\"touchend\", handleTouchEnd);\n      }\n      const cleanup = () => {\n        window.cancelAnimationFrame(animationFrameId);\n        if (enableHover) {\n          canvas.removeEventListener(\"mousemove\", handleMouseMove);\n          canvas.removeEventListener(\"mouseleave\", handleMouseLeave);\n          canvas.removeEventListener(\"touchmove\", handleTouchMove);\n          canvas.removeEventListener(\"touchend\", handleTouchEnd);\n        }\n      };\n      canvas.cleanupFuzzyText = cleanup;\n    };\n    init();\n    return () => {\n      isCancelled = true;\n      window.cancelAnimationFrame(animationFrameId);\n      if (canvas && canvas.cleanupFuzzyText) {\n        canvas.cleanupFuzzyText();\n      }\n    };\n  }, [children, fontSize, fontWeight, fontFamily, color, enableHover, baseIntensity, hoverIntensity]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 10\n  }, this);\n};\n_s(FuzzyText, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = FuzzyText;\nexport default FuzzyText;\nvar _c;\n$RefreshReg$(_c, \"FuzzyText\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","FuzzyText","children","fontSize","fontWeight","fontFamily","color","enableHover","baseIntensity","hoverIntensity","_s","canvasRef","animationFrameId","isCancelled","canvas","current","init","_document$fonts","_metrics$actualBoundi","_metrics$actualBoundi2","_metrics$actualBoundi3","_metrics$actualBoundi4","document","fonts","ready","ctx","getContext","computedFontFamily","window","getComputedStyle","fontSizeStr","numericFontSize","temp","createElement","style","body","appendChild","computedSize","parseFloat","removeChild","text","Children","toArray","join","offscreen","offCtx","font","textBaseline","metrics","measureText","actualLeft","actualBoundingBoxLeft","actualRight","actualBoundingBoxRight","width","actualAscent","actualBoundingBoxAscent","actualDescent","actualBoundingBoxDescent","textBoundingWidth","Math","ceil","tightHeight","extraWidthBuffer","offscreenWidth","height","xOffset","fillStyle","fillText","horizontalMargin","verticalMargin","translate","interactiveLeft","interactiveTop","interactiveRight","interactiveBottom","isHovering","fuzzRange","run","clearRect","intensity","j","dx","floor","random","drawImage","requestAnimationFrame","isInsideTextArea","x","y","handleMouseMove","e","rect","getBoundingClientRect","clientX","left","clientY","top","handleMouseLeave","handleTouchMove","preventDefault","touch","touches","handleTouchEnd","addEventListener","passive","cleanup","cancelAnimationFrame","removeEventListener","cleanupFuzzyText","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/francescociano/Desktop/Coding/Burotha/Projects/LandingPage/lending_page_marco_nitto/landing-page-mn/src/components/Bits/FuzzyText/FuzzyText.tsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\n\ninterface FuzzyTextProps {\n  children: React.ReactNode;\n  fontSize?: number | string;\n  fontWeight?: string | number;\n  fontFamily?: string;\n  color?: string;\n  enableHover?: boolean;\n  baseIntensity?: number;\n  hoverIntensity?: number;\n}\n\nconst FuzzyText: React.FC<FuzzyTextProps> = ({\n  children,\n  fontSize = \"clamp(2rem, 8vw, 8rem)\",\n  fontWeight = 900,\n  fontFamily = \"inherit\",\n  color = \"#fff\",\n  enableHover = true,\n  baseIntensity = 0.18,\n  hoverIntensity = 0.5,\n}) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    let animationFrameId: number;\n    let isCancelled = false;\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const init = async () => {\n      if (document.fonts?.ready) {\n        await document.fonts.ready;\n      }\n      if (isCancelled) return;\n\n      const ctx = canvas.getContext(\"2d\");\n      if (!ctx) return;\n\n      const computedFontFamily =\n        fontFamily === \"inherit\"\n          ? window.getComputedStyle(canvas).fontFamily || \"sans-serif\"\n          : fontFamily;\n\n      const fontSizeStr =\n        typeof fontSize === \"number\" ? `${fontSize}px` : fontSize;\n      let numericFontSize: number;\n      if (typeof fontSize === \"number\") {\n        numericFontSize = fontSize;\n      } else {\n        const temp = document.createElement(\"span\");\n        temp.style.fontSize = fontSize;\n        document.body.appendChild(temp);\n        const computedSize = window.getComputedStyle(temp).fontSize;\n        numericFontSize = parseFloat(computedSize);\n        document.body.removeChild(temp);\n      }\n\n      const text = React.Children.toArray(children).join(\"\");\n\n      const offscreen = document.createElement(\"canvas\");\n      const offCtx = offscreen.getContext(\"2d\");\n      if (!offCtx) return;\n\n      offCtx.font = `${fontWeight} ${fontSizeStr} ${computedFontFamily}`;\n      offCtx.textBaseline = \"alphabetic\";\n      const metrics = offCtx.measureText(text);\n\n      const actualLeft = metrics.actualBoundingBoxLeft ?? 0;\n      const actualRight = metrics.actualBoundingBoxRight ?? metrics.width;\n      const actualAscent = metrics.actualBoundingBoxAscent ?? numericFontSize;\n      const actualDescent =\n        metrics.actualBoundingBoxDescent ?? numericFontSize * 0.2;\n\n      const textBoundingWidth = Math.ceil(actualLeft + actualRight);\n      const tightHeight = Math.ceil(actualAscent + actualDescent);\n\n      const extraWidthBuffer = 10;\n      const offscreenWidth = textBoundingWidth + extraWidthBuffer;\n\n      offscreen.width = offscreenWidth;\n      offscreen.height = tightHeight;\n\n      const xOffset = extraWidthBuffer / 2;\n      offCtx.font = `${fontWeight} ${fontSizeStr} ${computedFontFamily}`;\n      offCtx.textBaseline = \"alphabetic\";\n      offCtx.fillStyle = color;\n      offCtx.fillText(text, xOffset - actualLeft, actualAscent);\n\n      const horizontalMargin = 50;\n      const verticalMargin = 0;\n      canvas.width = offscreenWidth + horizontalMargin * 2;\n      canvas.height = tightHeight + verticalMargin * 2;\n      ctx.translate(horizontalMargin, verticalMargin);\n\n      const interactiveLeft = horizontalMargin + xOffset;\n      const interactiveTop = verticalMargin;\n      const interactiveRight = interactiveLeft + textBoundingWidth;\n      const interactiveBottom = interactiveTop + tightHeight;\n\n      let isHovering = false;\n      const fuzzRange = 30;\n\n      const run = () => {\n        if (isCancelled) return;\n        ctx.clearRect(\n          -fuzzRange,\n          -fuzzRange,\n          offscreenWidth + 2 * fuzzRange,\n          tightHeight + 2 * fuzzRange\n        );\n        const intensity = isHovering ? hoverIntensity : baseIntensity;\n        for (let j = 0; j < tightHeight; j++) {\n          const dx = Math.floor(intensity * (Math.random() - 0.5) * fuzzRange);\n          ctx.drawImage(\n            offscreen,\n            0,\n            j,\n            offscreenWidth,\n            1,\n            dx,\n            j,\n            offscreenWidth,\n            1\n          );\n        }\n        animationFrameId = window.requestAnimationFrame(run);\n      };\n\n      run();\n\n      const isInsideTextArea = (x: number, y: number) =>\n        x >= interactiveLeft &&\n        x <= interactiveRight &&\n        y >= interactiveTop &&\n        y <= interactiveBottom;\n\n      const handleMouseMove = (e: MouseEvent) => {\n        if (!enableHover) return;\n        const rect = canvas.getBoundingClientRect();\n        const x = e.clientX - rect.left;\n        const y = e.clientY - rect.top;\n        isHovering = isInsideTextArea(x, y);\n      };\n\n      const handleMouseLeave = () => {\n        isHovering = false;\n      };\n\n      const handleTouchMove = (e: TouchEvent) => {\n        if (!enableHover) return;\n        e.preventDefault();\n        const rect = canvas.getBoundingClientRect();\n        const touch = e.touches[0];\n        const x = touch.clientX - rect.left;\n        const y = touch.clientY - rect.top;\n        isHovering = isInsideTextArea(x, y);\n      };\n\n      const handleTouchEnd = () => {\n        isHovering = false;\n      };\n\n      if (enableHover) {\n        canvas.addEventListener(\"mousemove\", handleMouseMove);\n        canvas.addEventListener(\"mouseleave\", handleMouseLeave);\n        canvas.addEventListener(\"touchmove\", handleTouchMove, {\n          passive: false,\n        });\n        canvas.addEventListener(\"touchend\", handleTouchEnd);\n      }\n\n      const cleanup = () => {\n        window.cancelAnimationFrame(animationFrameId);\n        if (enableHover) {\n          canvas.removeEventListener(\"mousemove\", handleMouseMove);\n          canvas.removeEventListener(\"mouseleave\", handleMouseLeave);\n          canvas.removeEventListener(\"touchmove\", handleTouchMove);\n          canvas.removeEventListener(\"touchend\", handleTouchEnd);\n        }\n      };\n\n      (canvas as any).cleanupFuzzyText = cleanup;\n    };\n\n    init();\n\n    return () => {\n      isCancelled = true;\n      window.cancelAnimationFrame(animationFrameId);\n      if (canvas && (canvas as any).cleanupFuzzyText) {\n        (canvas as any).cleanupFuzzyText();\n      }\n    };\n  }, [\n    children,\n    fontSize,\n    fontWeight,\n    fontFamily,\n    color,\n    enableHover,\n    baseIntensity,\n    hoverIntensity,\n  ]);\n\n  return <canvas ref={canvasRef} />;\n};\n\nexport default FuzzyText;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}