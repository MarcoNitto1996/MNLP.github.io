{"ast":null,"code":"var _jsxFileName = \"/Users/francescociano/Desktop/Coding/Burotha/Projects/LandingPage/lending_page_marco_nitto/landing-page-mn/src/components/Carousel/ImageCarousel.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './ImageCarousel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ImageCarousel({\n  images\n}) {\n  _s();\n  const [currentIndex, setCurrentIndex] = React.useState(0);\n  const [startIndex, setStartIndex] = React.useState(0);\n  const [isTransitioning, setIsTransitioning] = React.useState(false); // Stato per la transizione\n  const visibleThumbnails = 3;\n\n  // Variabili per il rilevamento dello swipe\n  let touchStartX = null;\n  let touchEndX = null;\n  const handleTouchStart = e => {\n    touchStartX = e.targetTouches[0].clientX;\n  };\n  const handleTouchMove = e => {\n    touchEndX = e.targetTouches[0].clientX;\n  };\n  const handleTouchEnd = () => {\n    if (!touchStartX || !touchEndX) return;\n    const swipeDistance = touchStartX - touchEndX;\n    if (swipeDistance > 50) {\n      nextImage();\n    } else if (swipeDistance < -50) {\n      prevImage();\n    }\n    touchStartX = null;\n    touchEndX = null;\n  };\n  const nextImage = () => {\n    setIsTransitioning(true); // Attiva la transizione\n    setTimeout(() => {\n      setCurrentIndex(prevIndex => {\n        const newIndex = (prevIndex + 1) % images.length;\n        setStartIndex(prevStartIndex => {\n          if (newIndex >= prevStartIndex + visibleThumbnails) {\n            return (prevStartIndex + 1) % images.length;\n          } else if (newIndex === 0) {\n            return 0;\n          }\n          return prevStartIndex;\n        });\n        return newIndex;\n      });\n      setIsTransitioning(false); // Disattiva la transizione dopo il cambio di immagine\n    }, 400); // Durata della transizione (match con CSS)\n  };\n  const prevImage = () => {\n    setIsTransitioning(true);\n    setTimeout(() => {\n      setCurrentIndex(prevIndex => {\n        const newIndex = (prevIndex - 1 + images.length) % images.length;\n        setStartIndex(prevStartIndex => {\n          if (newIndex < prevStartIndex) {\n            return (prevStartIndex - 1 + images.length) % images.length;\n          } else if (newIndex === images.length - 1) {\n            return Math.max(0, images.length - visibleThumbnails);\n          }\n          return prevStartIndex;\n        });\n        return newIndex;\n      });\n      setIsTransitioning(false);\n    }, 400);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-main\",\n      onTouchStart: handleTouchStart,\n      onTouchMove: handleTouchMove,\n      onTouchEnd: handleTouchEnd,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: images[currentIndex],\n        alt: `Image ${currentIndex + 1}`,\n        className: `carousel-main-image ${isTransitioning ? 'transition' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-thumbnails\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevImage,\n        className: \"carousel-button\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-caret-left-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 73\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thumbnail-container\",\n        children: Array.from({\n          length: visibleThumbnails\n        }).map((_, index) => {\n          const actualIndex = (startIndex + index) % images.length;\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            src: images[actualIndex],\n            alt: `Thumbnail ${actualIndex + 1}`,\n            onClick: () => setCurrentIndex(actualIndex),\n            className: `carousel-thumbnail ${actualIndex === currentIndex ? 'active' : ''}`\n          }, actualIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextImage,\n        className: \"carousel-button\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-caret-right-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 73\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n_s(ImageCarousel, \"0dKDgz8CqCIblJyIjYHSofiLJzw=\");\n_c = ImageCarousel;\nvar _c;\n$RefreshReg$(_c, \"ImageCarousel\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ImageCarousel","images","_s","currentIndex","setCurrentIndex","useState","startIndex","setStartIndex","isTransitioning","setIsTransitioning","visibleThumbnails","touchStartX","touchEndX","handleTouchStart","e","targetTouches","clientX","handleTouchMove","handleTouchEnd","swipeDistance","nextImage","prevImage","setTimeout","prevIndex","newIndex","length","prevStartIndex","Math","max","className","children","onTouchStart","onTouchMove","onTouchEnd","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Array","from","map","_","index","actualIndex","_c","$RefreshReg$"],"sources":["/Users/francescociano/Desktop/Coding/Burotha/Projects/LandingPage/lending_page_marco_nitto/landing-page-mn/src/components/Carousel/ImageCarousel.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport './ImageCarousel.css';\n\ninterface ImageCarouselProps {\n    images: string[];\n}\n\nexport default function ImageCarousel({ images }: ImageCarouselProps) {\n    const [currentIndex, setCurrentIndex] = React.useState(0);\n    const [startIndex, setStartIndex] = React.useState(0);\n    const [isTransitioning, setIsTransitioning] = React.useState(false); // Stato per la transizione\n    const visibleThumbnails = 3;\n\n    // Variabili per il rilevamento dello swipe\n    let touchStartX: number | null = null;\n    let touchEndX: number | null = null;\n\n    const handleTouchStart = (e: React.TouchEvent) => {\n        touchStartX = e.targetTouches[0].clientX;\n    };\n\n    const handleTouchMove = (e: React.TouchEvent) => {\n        touchEndX = e.targetTouches[0].clientX;\n    };\n\n    const handleTouchEnd = () => {\n        if (!touchStartX || !touchEndX) return;\n\n        const swipeDistance = touchStartX - touchEndX;\n\n        if (swipeDistance > 50) {\n            nextImage();\n        } else if (swipeDistance < -50) {\n            prevImage();\n        }\n\n        touchStartX = null;\n        touchEndX = null;\n    };\n\n    const nextImage = () => {\n        setIsTransitioning(true); // Attiva la transizione\n        setTimeout(() => {\n            setCurrentIndex((prevIndex) => {\n                const newIndex = (prevIndex + 1) % images.length;\n\n                setStartIndex((prevStartIndex) => {\n                    if (newIndex >= prevStartIndex + visibleThumbnails) {\n                        return (prevStartIndex + 1) % images.length;\n                    } else if (newIndex === 0) {\n                        return 0;\n                    }\n                    return prevStartIndex;\n                });\n\n                return newIndex;\n            });\n            setIsTransitioning(false); // Disattiva la transizione dopo il cambio di immagine\n        }, 400); // Durata della transizione (match con CSS)\n    };\n\n    const prevImage = () => {\n        setIsTransitioning(true);\n        setTimeout(() => {\n            setCurrentIndex((prevIndex) => {\n                const newIndex = (prevIndex - 1 + images.length) % images.length;\n\n                setStartIndex((prevStartIndex) => {\n                    if (newIndex < prevStartIndex) {\n                        return (prevStartIndex - 1 + images.length) % images.length;\n                    } else if (newIndex === images.length - 1) {\n                        return Math.max(0, images.length - visibleThumbnails);\n                    }\n                    return prevStartIndex;\n                });\n\n                return newIndex;\n            });\n            setIsTransitioning(false);\n        }, 400);\n    };\n\n    return (\n\n            \n\n\n        <div className=\"carousel\">\n            <div \n                className=\"carousel-main\" \n                onTouchStart={handleTouchStart}\n                onTouchMove={handleTouchMove}\n                onTouchEnd={handleTouchEnd}\n            >\n                <img \n                    src={images[currentIndex]} \n                    alt={`Image ${currentIndex + 1}`} \n                    className={`carousel-main-image ${isTransitioning ? 'transition' : ''}`} \n                />\n            </div>\n            <div className=\"carousel-thumbnails\">\n                <button onClick={prevImage} className=\"carousel-button\"><i className=\"bi bi-caret-left-fill\"></i></button>\n                \n                <div className=\"thumbnail-container\">\n                    {Array.from({ length: visibleThumbnails }).map((_, index) => {\n                        const actualIndex = (startIndex + index) % images.length;\n                        return (\n                            <img\n                                key={actualIndex}\n                                src={images[actualIndex]}\n                                alt={`Thumbnail ${actualIndex + 1}`}\n                                onClick={() => setCurrentIndex(actualIndex)}\n                                className={`carousel-thumbnail ${actualIndex === currentIndex ? 'active' : ''}`}\n                            />\n                        );\n                    })}\n                </div>\n                \n                <button onClick={nextImage} className=\"carousel-button\"><i className=\"bi bi-caret-right-fill\"></i></button>\n            </div>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}